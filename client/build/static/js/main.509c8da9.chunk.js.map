{"version":3,"sources":["store/reducers/auth.js","store/reducers/index.js","store/reducers/error.js","store/actionTypes.js","store/reducers/polls.js","store/index.js","store/actions/error.js","services/api.js","store/actions/auth.js","store/actions/polls.js","components/Auth.jsx","components/ErrorMessage.jsx","pages/AuthPage.jsx","components/Poll.jsx","services/color.js","components/Polls.jsx","components/CreatePoll.jsx","pages/TestPage.jsx","pages/Homepage.jsx","pages/PollPage.jsx","pages/CreatePollPage.jsx","containers/RouteViews.jsx","containers/NavBar.jsx","containers/App.jsx","registerServiceWorker.js","index.js"],"names":["DEFAULT_STATE","isAuthenticated","user","combineReducers","error","state","arguments","length","undefined","message","action","type","console","log","Object","objectSpread","auth","keys","polls","currentPoll","poll","store","createStore","rootReducer","compose","applyMiddleware","thunk","addError","api","setToken","token","axios","defaults","headers","common","concat","call","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","method","path","data","response","wrap","_context","prev","next","sent","abrupt","stop","_x","_x2","_x3","apply","this","setCurrentUser","logout","dispatch","localStorage","clear","setPolls","setCurrentPoll","Auth","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","username","password","email","ethAddress","handleChange","bind","assertThisInitialized","handleSubmit","e","setState","defineProperty","target","name","value","_this$state","authType","preventDefault","authUser","ethInput","ethLabel","cardActions","emailInput","emailLabel","_this$state2","react_default","createElement","onChange","autoComplete","className","htmlFor","Link","to","onSubmit","id","Component","connect","_ref2","objectWithoutProperties","setItem","t0","react","AuthPage","Redirect","components_ErrorMessage","components_Auth","withRouter","vote","_ref6","_callee6","_context6","_x6","deletePoll","_ref7","_callee7","_context7","_x7","answers","options","map","option","onClick","_id","answer","key","pollData","labels","datasets","label","question","backgroundColor","Math","random","toString","slice","borderColor","votes","defaultFontColor","react_chartjs_2_es","Polls","sorted","page","pageSize","expanded","resized","filtered","handleSelect","getSlicedPolls","history","push","_this2","_this$props","getPolls","getUserPolls","react_table_es","columns","Header","accessor","d","voters","filterable","maxWidth","defaultPageSize","onSortedChange","onPageChange","onPageSizeChange","onExpandedChange","onResizedChange","onFilteredChange","_ref3","_callee3","_context3","_callee2","slicedPolls","_context2","CreatePoll","addAnswer","handleAnswer","handleVoter","addVoter","toConsumableArray","index","createPoll","i","voter","_ref4","_callee4","_context4","_x4","jwtToken","decode","err","es","components_CreatePoll","components_Polls","components_Poll","Homepage","PollPage","match","getPoll","params","CreatePollPage","getCurrentPoll","_ref5","_callee5","_context5","_x5","Switch","Route","exact","render","pages_Homepage","pages_AuthPage","pages_CreatePollPage","pages_PollPage","assign","TestPage","App","BrowserRouter","NavBar","containers_RouteViews","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","React","URL","process","origin","addEventListener","fetch","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.509c8da9.chunk.js","sourcesContent":["import {SET_CURRENT_USER} from '../actionTypes';\n\nconst DEFAULT_STATE = {\n    isAuthenticated: false,\n    user: {}\n}\n\nexport default (state = DEFAULT_STATE, action) => {\n    switch(action.type){\n        case SET_CURRENT_USER:\n            return {\n                isAuthenticated: !!Object.keys(action.user).length,\n                user: action.user\n            };\n\n        default:\n            return state;\n    }\n\n}","import {combineReducers} from 'redux';\nimport auth from './auth';\nimport error from './error';\nimport {polls, currentPoll} from './polls';\n\n\nexport default combineReducers({\n    error,\n    auth,\n    polls,\n    currentPoll\n});","import {ADD_ERROR, REMOVE_ERROR} from '../actionTypes';\n\nexport default (state = {message: null}, action) => {\n\n    switch(action.type) {\n        \n        case ADD_ERROR:\n            console.log(action.error);\n            return {...state, message: action.error};\n\n        case REMOVE_ERROR:\n            return {...state, message: null};\n\n        default:\n            return state;\n    }\n}","export const ADD_ERROR = 'ADD_ERROR';\nexport const REMOVE_ERROR = 'REMOVE_ERROR';\n\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\n\nexport const SET_POLLS = 'SET_POLLS';\nexport const SET_CURRENT_POLL = 'SET_CURRENT_POLL';\n","import {SET_POLLS, SET_CURRENT_POLL} from '../actionTypes';\n\nexport const polls = (state = [], action) => {\n    switch(action.type) {\n        case SET_POLLS:\n            return action.polls;\n        \n        default:\n            return state;\n    }\n}\n\nexport const currentPoll = (state = {}, action) => {\n    switch(action.type){\n\n        case SET_CURRENT_POLL:\n            return action.poll;\n        \n        default:\n            return state;\n    }\n}","import {createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst DEFAULT_STATE = {\n    error: {message: null}\n};\n\nexport const store = createStore(\n    rootReducer,\n    DEFAULT_STATE,\n    compose(applyMiddleware(thunk))\n  );\n","import {ADD_ERROR, REMOVE_ERROR} from '../actionTypes';\n\nexport const addError = error => ({\n    type: ADD_ERROR,\n    error\n});\n\nexport const removeError = () => ({\n    type: REMOVE_ERROR\n});","import axios from 'axios';\n\nconst host = 'http://localhost:4000/api';\n\nexport const setToken = token => {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  } else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\n\nexport const call = async (method, path, data) => {\n  const response = await axios[method](`${host}/${path}`, data);\n  return response.data;\n};\n\nexport default { setToken, call };\n","import {addError, removeError} from './error';\nimport {SET_CURRENT_USER} from '../actionTypes';\nimport api from '../../services/api';\n\nexport const setCurrentUser = user => ({\n    type: SET_CURRENT_USER,\n    user\n});\n\nexport const setToken = token => {\n    api.setToken(token);\n};\n\nexport const logout = () => {\n    return dispatch => {\n        localStorage.clear();\n        api.setToken(null);\n        dispatch(setCurrentUser({}));\n        dispatch(removeError());\n    }\n}\n\nexport const authUser = (path, data) => {\n    return async dispatch => {\n        try {\n            //console.log(path);\n            //console.log(data);\n            const {token, ...user} = await api.call('post', `auth/${path}`, data);\n            localStorage.setItem('jwtToken', token);\n            api.setToken(token);\n            dispatch(setCurrentUser(user));\n            dispatch(removeError());\n        } catch(err) {\n            //console.log(err)\n            const error = err.response.data;\n            dispatch(addError(error.message)); \n        }\n    }\n}","import {SET_POLLS, SET_CURRENT_POLL} from '../actionTypes';\nimport {addError, removeError} from './error';\nimport api from '../../services/api';\n//import { BrowserHistory } from 'react-router';\n\nexport const setPolls = polls => ({\n    type: SET_POLLS,\n    polls\n});\n\nexport const setCurrentPoll = poll => ({\n    type: SET_CURRENT_POLL,\n    poll\n});\n\nexport const getPolls = () => {\n    return async dispatch => {\n        try {\n            const polls = await api.call('get', 'polls');\n            dispatch(setPolls(polls));\n            dispatch(removeError());\n        } catch (err) {\n            const error = err.response.data;\n            dispatch(addError(error.message));\n        }\n    }\n}\n// more like get last polls but whatever >.<\nexport const getSlicedPolls = () => {\n    return async dispatch => {\n        try {\n            const polls = await api.call('get', 'polls');\n            console.log(\"ceci est la taille de polls : \" + polls.length);\n            const slicedPolls = polls.slice((polls.length - 5),polls.length);\n            dispatch(setPolls(slicedPolls));\n            dispatch(removeError());\n        } catch (err) {\n            const error = err.response.data;\n            dispatch(addError(error.message));\n        }\n    }\n}\n\n// export const sortPolls = () => { // TODO or to remove\n//     return async dispatch => {\n//         try {\n//             const polls = await api.call('get', 'polls');\n//         }catch(err){\n//             const error = err.response.data;\n//             dispatch(addError(error.message));\n//         }\n//     }\n// }\n\nexport const getUserPolls = () => {\n    return async dispatch => {\n        try {\n            const polls = await api.call('get', 'polls/user');\n            dispatch(setPolls(polls));\n            dispatch(removeError());\n        } catch (err) {\n            const error = err.response.data;\n            dispatch(addError(error.message));\n        }\n    }\n}\n\nexport const createPoll = data => {\n    return async dispatch => {\n        try {\n            const poll = await api.call('post', 'polls', data);\n            dispatch(setCurrentPoll(poll));\n            dispatch(removeError());\n        } catch (err) {\n            const error = err.response.data;\n            dispatch(addError(error.message));\n        }\n    }\n}\n\nexport const getCurrentPoll = path => {\n    return async dispatch => {\n      try {\n        const poll = await api.call('get', `polls/${path}`);\n        dispatch(setCurrentPoll(poll));\n        dispatch(removeError());\n      } catch (err) {\n        const  error  = err.response.data;\n        dispatch(addError(error));\n      }\n    }\n  };\n\nexport const vote = (path, data) => {\n    return async dispatch => {\n        try {\n            const poll = await api.call('post', `polls/${path}`, data);\n            dispatch(setCurrentPoll(poll));\n            dispatch(removeError());\n        } catch (err) {\n            const error = err.response.data;\n            dispatch(addError(error.message));\n        }\n    }\n}\n\nexport const deletePoll = (id) => {\n    return async dispatch => {\n        try {\n            const poll = await api.call('delete', `polls/${id}`);\n            dispatch(setCurrentPoll(poll));\n            dispatch(removeError());\n            \n        } catch (err) {\n            const error = err.response.data;\n            dispatch(addError(error.message));\n        }\n    }\n}","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { authUser, logout } from '../store/actions';\n\nclass Auth extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      email: '',\n      ethAddress: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  handleSubmit(e) {\n    const { username, password, ethAddress, email } = this.state;\n    const { authType } = this.props;\n    e.preventDefault();\n    this.props.authUser(authType || 'login', { username, password, ethAddress, email });\n  }\n\n  componentDidMount(){\n\n  }\n\n\n  render() {\n    const { username, password, email, ethAddress } = this.state;\n    const { authType } = this.props;\n    let ethInput;\n    let ethLabel;\n    let cardActions;\n    let emailInput, emailLabel;\n\n    if (authType === 'register') {\n      ethInput = <input\n                    type=\"text\"\n                    value={ethAddress}\n                    name=\"ethAddress\"\n                    onChange={this.handleChange}\n                    autoComplete=\"off\"\n                    className=\"form-input validate\"\n                  />;\n      ethLabel= <label className=\"form-label\" htmlFor=\"ethAddress\">\n                    ethAddress {' '}\n                </label>;\n      emailInput = <input\n                    type=\"text\"\n                    value={email}\n                    name=\"email\"\n                    onChange={this.handleChange}\n                    autoComplete=\"off\"\n                    className=\"form-input validate\"\n                  />;\n      emailLabel= <label className=\"form-label\" htmlFor=\"email\">\n                      email {' '}\n                  </label>;\n      cardActions = <Link className=\"\" to=\"/login\">login ?</Link>;\n    } else {\n      ethInput = null ;\n      cardActions = <Link className=\"\" to=\"/register\">register ?</Link>;\n    }\n    return (\n        \n        <div className=\"row\">\n        <br></br><br></br><br></br><br></br>\n        <form className=\"col s8 m6 l4 offset-s2 offset-m4 offset-l4\" onSubmit={this.handleSubmit}>\n          \n            <div className=\"card blue-grey\">\n              <div className=\"card-content\">\n                <h1 className=\"card-title\">{authType}</h1>\n                    <div className=\"input-field\">\n                      <input id=\"username\" type=\"text\" value={username} name=\"username\" onChange={this.handleChange} autoComplete=\"off\" className=\"validate\"/>\n                      <label htmlFor=\"username\">USERNAME</label>\n                    </div>\n                    <div className=\"input-field\">\n                      <input id=\"password\" type=\"password\" value={password} name=\"password\" onChange={this.handleChange} className=\"validate\"/>\n                      <label htmlFor=\"password\">PASSWORD</label>\n                    </div>\n                    <div className=\"input-field\">\n                      { emailLabel } { emailInput } \n                    </div>\n                    <div className=\"input-field\">\n                      { ethLabel } { ethInput }\n                    </div>\n                    <div className=\"buttons_center\">\n                      <button className=\"button\" type=\"submit\">\n                        Submit\n                      </button>\n                    </div>\n              </div>\n              <div className=\"card-action\">\n                <Link className=\"\" to=\"/poll/new\">Forgot password ?</Link> { cardActions }\n              </div>\n            </div>\n          \n        </form>\n      </div>\n    );\n  }\n}\n\nexport default connect(() => ({}), { authUser, logout })(Auth);","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nconst ErrorMessage = ({ error }) => (\n    <Fragment> { error.message && <div className=\"error\" >{error.message}</div>} </Fragment>\n);\n\nexport default connect(store => ({ error: store.error }))(ErrorMessage);","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Auth from '../components/Auth';\nimport ErrorMessage from '../components/ErrorMessage';\n\nconst AuthPage = ({ authType, isAuthenticated }) => {\n\n    if(isAuthenticated) return <Redirect to=\"/\" />;\n\n\n\n    return (\n        <div>\n            <ErrorMessage />\n            <Auth authType={authType} />\n        </div>\n    )\n}\n\nexport default AuthPage;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Pie } from 'react-chartjs-2';\nimport { vote, deletePoll } from '../store/actions';\nimport { color } from '../services/color';\nimport { withRouter } from 'react-router-dom';\n\n\nconst Poll = ({ poll, vote, deletePoll }) => {\n\n  const answers =\n    poll.options &&\n    poll.options.map(option => (\n      <button\n        onClick={() => vote(poll._id, { answer: option.option })}\n        className=\"button\"\n        key={option._id}>\n        {option.option}\n      </button>\n    ));\n\n  const pollData = poll.options && {\n    labels: poll.options.map(option => option.option),\n    datasets: [\n      {\n        label: poll.question,\n        backgroundColor: poll.options.map(option => color()),\n        borderColor: '#323643',\n        data: poll.options.map(option => option.votes),\n        defaultFontColor: \"#FFFFFF\",\n      },\n    ],\n  };\n\n  const pollDataBis = async () => {\n    // TODO : appel sur l'api pour récupérer les infos du contrat \n    // au lieu de stocker dans mongo quand l'appel au noeud eth s'est bien passé..\n    // puis les display comme prévu\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"container\">\n        <div className=\"col s6 m6\">\n          <div className=\"card blue-grey darken-1\">\n            <div className=\"card-content white-text\">\n              <span className=\"card-title\">{poll.question}</span>\n              <p>Infos from the smart contract</p>\n            </div>\n          <div className=\"card-action\">\n            <ul>\n              <li>{answers}</li>\n              <li><button className=\"button\" onClick={() => deletePoll(poll._id)}>Delete poll</button></li>\n            </ul>\n          </div>\n          </div>\n        </div>\n          <div className=\"container\">\n            <div className=\"col s6 m6\">\n              <div className=\"card blue-grey lighten-2\">\n                <div className=\"card-content\">\n                <span className=\"card-title\">Votes</span>\n                <p>Nice graphic of the votes</p>\n                  { poll.options && <Pie data={pollData} /> }\n                </div>\n              </div>\n            </div>\n          </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(connect(\n  store => ({\n    poll: store.currentPoll,\n  }),\n  { vote, deletePoll },\n)(Poll));","export const color = () => {\n    return (\n      '#' +\n      Math.random()\n        .toString(16)\n        .slice(2, 8)\n    );\n  };","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getPolls, getUserPolls, getSlicedPolls } from '../store/actions';\n// Import React Table\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\n\n\nclass Polls extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    sorted: [],\n    page: 0,\n    pageSize: 10,\n    expanded: {},\n    resized: [],\n    filtered: []};\n    this.handleSelect = this.handleSelect.bind(this);\n  }\n\n  componentDidMount() {\n    const { getSlicedPolls } = this.props;\n    getSlicedPolls();\n  }\n\n  handleSelect(id) {\n    const { history } = this.props;\n    history.push(`/polls/${id}`);\n  }\n\n  render() {  \n    const { getPolls, getUserPolls, auth, getSlicedPolls } = this.props;\n\n    const polls = this.props.polls.map((poll, i=0) => (\n\n      <Fragment key={poll._id}>\n        <tr className=\"\">\n          <td>{poll.question}</td>\n          <td> voters list inc soon </td>\n          <td> Poll status inc soon </td>\n          <td> Voted inc soon </td>\n          <td> Participation inc soon </td>\n          <td><button className=\"btn-small buttons_center z-depth-1\" onClick={() => this.handleSelect(poll._id)} ><i className=\"material-icons\">send</i></button></td>\n        </tr>\n      </Fragment>\n    ));\n    console.log();\n    return (\n\n      <Fragment>\n        \n        {auth.isAuthenticated && (\n          <div className=\"container\">\n\n          <ReactTable\n            data={this.props.polls}\n            columns={[\n              {\n                Header: \"Poll App\",\n                columns: [\n                  {\n                    Header: \"User\",\n                    accessor: \"user.username\"\n                  },\n                  {\n                    Header: \"Question\",\n                    accessor: \"question\"\n                  },\n                  {\n                    Header: \"Voters\",\n                    id: \"voters\",\n                    accessor: d => d.voters\n                  }\n                ]\n              }\n            ]}\n            filterable\n            maxWidth = '160px '\n            defaultPageSize={10}\n            className=\"-striped -highlight\"\n            // Controlled props\n            sorted={this.state.sorted}\n            page={this.state.page}\n            pageSize={this.state.pageSize}\n            expanded={this.state.expanded}\n            resized={this.state.resized}\n            filtered={this.state.filtered}\n            // Callbacks\n            onSortedChange={sorted => this.setState({ sorted })}\n            onPageChange={page => this.setState({ page })}\n            onPageSizeChange={(pageSize, page) => this.setState({ page, pageSize })}\n            onExpandedChange={expanded => this.setState({ expanded })}\n            onResizedChange={resized => this.setState({ resized })}\n            onFilteredChange={filtered => this.setState({ filtered })}\n          />\n          \n          <div className=\"section\"></div>\n              <div className=\"row\">\n                <Link className=\"btn-large col s2 m2 l2 offset-s2 offset-m2 offset-l3 z-depth-3\" to=\"/poll/new\">New Poll</Link>\n                <div className=\"dropdown\">\n                  <button onClick=\"myFunction()\" className=\"dropbtn\">Dropdown</button>\n                  <div id=\"myDropdown\" className=\"dropdown-content\">\n                    <Link className=\"btn-large col s2 m2 l2 offset-s2 offset-m2 offset-l3 z-depth-3\" to=\"/poll/new\">New Poll</Link>\n                    <Link className=\"btn-large col s2 m2 l2 offset-s2 offset-m2 offset-l3 z-depth-3\" to=\"/poll/new\">New Poll</Link>\n                  </div>\n                </div>\n              </div>\n              <div className=\"section\"></div>\n            </div>\n        )}\n        <br></br>\n              {auth.isAuthenticated && (\n                <div className=\"container z-depth-4\">\n                            <table className=\"responsive-table centered z-depth-1\">\n                              <thead>\n                                <tr>\n                                  <th> Name </th>\n                                  <th> Voters List </th>\n                                  <th> Poll Status </th>\n                                  <th> voted ? </th>\n                                  <th> Participation </th>\n                                </tr>\n                              </thead>\n                              <tbody>{polls}</tbody>\n                              \n                            </table>\n                </div>\n              )}\n              {!auth.isAuthenticated && (\n                <ul className=\"container row\">\n                    <li><Link className=\"btn-large teal col s2 m2 l2 darken-2 z-depth-5\" to=\"/register\">Register</Link></li>\n                    <li><Link className=\"btn-large teal col s2 m2 l2 offset-s1 offset-m1 offset-l1 darken-2 z-depth-5\" to=\"/login\">Login</Link></li>\n                </ul>\n              )}\n      </Fragment>\n      \n    );\n  }\n}\n\nexport default connect(store => ({\n    auth: store.auth,\n    polls: store.polls,\n  }),\n  { getPolls, getUserPolls, getSlicedPolls },\n)(Polls);","import React, { Component, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { createPoll } from '../store/actions';\n\nclass CreatePoll extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      question: '',\n      options: ['', ''],\n      voters: ['',''],\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.addAnswer = this.addAnswer.bind(this);\n    this.handleAnswer = this.handleAnswer.bind(this);\n    this.handleVoter = this.handleVoter.bind(this);\n    this.addVoter = this.addVoter.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  addVoter() {\n    this.setState({ voters: [...this.state.voters, ''] });\n  }\n  addAnswer() {\n    this.setState({ options: [...this.state.options, ''] });\n  }\n\n  handleAnswer(e, index) {\n    const options = [...this.state.options];\n    options[index] = e.target.value;\n    this.setState({ options });\n  }\n  handleVoter(e, index) {\n    const voters = [...this.state.voters];\n    voters[index] = e.target.value;\n    this.setState({ voters });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.createPoll(this.state);\n    this.props.history.push('/');\n  }\n\n  render() {\n    const options = this.state.options.map((option, i) => (\n      <Fragment key={i}>\n        <label className=\"label-info black-text\">option</label>\n        <input\n          className=\"input-field\"\n          type=\"text\"\n          value={options}\n          onChange={e => this.handleAnswer(e, i)}\n        />\n        \n      </Fragment>\n    ));\n\n    const voters = this.state.voters.map((voter, i) => (\n      <Fragment key={i}>\n        <label className=\"label-info black-text\">voter</label>\n        <input\n          className=\"input-field\"\n          type=\"text\"\n          value={voters}\n          onChange={e => this.handleVoter(e, i)}\n        />\n      </Fragment>\n    ));\n\n    return (\n      \n    <div className=\"row\">\n      <form className=\"form\" onSubmit={this.handleSubmit}>\n        <div className=\"container\">\n          <div className=\"card blue-grey darken-1\">\n            <div className=\"card-content\">\n        <label className=\"form-label black-text\" htmlFor=\"question\">\n          question\n        </label>\n        <input\n          className=\"input-field\"\n          type=\"text\"\n          name=\"question\"\n          value={this.state.question}\n          onChange={this.handleChange}\n        />\n        <div className=\"container\">{options}\n        <div className=\"buttons_center\">\n          <button className=\"button\" type=\"button\" onClick={this.addAnswer}>\n            Add options\n          </button>\n          </div>\n          <div className=\"container\">{voters}</div>\n          <div className=\"buttons_center\">\n          <button className=\"button\" type=\"button\" onClick={this.addVoter}>\n            Add Voter\n          </button>\n          </div>\n          <div className=\"buttons_center\">\n          <button className=\"button\" type=\"submit\">\n            Submit\n          </button>\n          </div>\n        </div>\n        </div>\n        </div>\n        </div>\n      </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(() => ({}), { createPoll })(CreatePoll));","import React, { Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport decode from 'jwt-decode';\nimport { Provider } from 'react-redux';\nimport { store } from '../store';\nimport { setToken, setCurrentUser, addError } from '../store/actions';\n\nimport Auth from '../components/Auth';\nimport Poll from '../components/Poll';\nimport Polls from '../components/Polls';\nimport ErrorMessage from '../components/ErrorMessage';\nimport CreatePoll from '../components/CreatePoll';\n//import Contract from '../components/Contract';\n\nif (localStorage.jwtToken) {\n  setToken(localStorage.jwtToken);\n  try {\n    store.dispatch(setCurrentUser(decode(localStorage.jwtToken)));\n  } catch (err) {\n    store.dispatch(setCurrentUser({}));\n    store.dispatch(addError(err));\n  }\n}\n\n// const options = {\n//   contracts: [MyStringStore],\n//   web3: {\n//     fallback: {\n//       type: \"ws\",\n//       url: \"ws://127.0.0.1:8545\",\n//     },\n//   },\n// };\n\n// const drizzle = new Drizzle(options);\n\nconst UITest = props => (\n\n  <Provider store={store}>\n    <Fragment>\n      <h1>UI Test Page</h1>\n\n      <h2>Testing Error Component: </h2>\n      <ErrorMessage />\n      <hr />\n\n      <h2>Testing Auth Component: </h2>\n      <Auth />\n      <hr />\n\n      <h2>Testing Create Poll Component: </h2>\n      <CreatePoll />\n      <hr />\n\n      <h2>Testing Polls Component: </h2>\n      <Polls {...props} />\n      <hr />\n\n      <h2>Testing Poll Component: </h2>\n      <Poll />\n      <hr />\n      <h2>Testing Drizzle contract Component: </h2>\n      <hr />\n    </Fragment>\n  </Provider>\n);\n\nexport default withRouter(UITest);","import React from 'react';\nimport Polls from '../components/Polls';\nimport ErrorMessage from '../components/ErrorMessage';\n\n\nconst Homepage = props => <div>\n    <Polls {...props} />\n    {<ErrorMessage />}\n</div>\n\nexport default Homepage;","import React from 'react';\nimport Poll from '../components/Poll';\nimport ErrorMessage from '../components/ErrorMessage';\n\nconst PollPage = ({ match, getPoll }) => {\n    //const host = window.location.href;\n    getPoll(match.params.id);\n\n    return (\n        <div>\n            <ErrorMessage />\n            <Poll />\n        </div>\n    )\n}\n\nexport default PollPage;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport CreatePoll from '../components/CreatePoll';\nimport ErrorMessage from '../components/ErrorMessage';\n\nconst CreatePollPage = ({ isAuthenticated }) => {\n  if (!isAuthenticated) return <Redirect to=\"/login\" />;\n\n  return (\n    <div>\n      <ErrorMessage />\n      <CreatePoll />\n    </div>\n  );\n};\n\nexport default CreatePollPage;","import React from 'react';\nimport {Switch, Route, withRouter} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport AuthPage from '../pages/AuthPage';\nimport TestPage from '../pages/TestPage';\nimport Homepage from '../pages/Homepage';\nimport {getCurrentPoll} from '../store/actions';\nimport PollPage from '../pages/PollPage';\nimport CreatePollPage from '../pages/CreatePollPage';\n\n\nconst RouteViews = ({ auth, getCurrentPoll }) => \n\n<main>\n    <Switch>\n        <Route exact path=\"/\" render = { props => <Homepage {...props}/> } />\n        <Route exact path=\"/login\" render = { () => <AuthPage authType=\"login\" isAuthenticated={auth.isAuthenticated}/> } />\n        <Route exact path=\"/poll/new\" render={ () => <CreatePollPage isAuthenticated={auth.isAuthenticated} /> }/>\n        <Route exact path=\"/register\" render = { () => <AuthPage authType=\"register\" isAuthenticated={auth.isAuthenticated}/> } />\n        <Route exact path='/polls/:id' render={ props => <PollPage getPoll={id => getCurrentPoll(id)} {...props} /> } />\n        <Route exact path=\"/test\" render = { () => <TestPage/>}/>\n    </Switch>\n</main>;\n\nexport default withRouter(\n    connect(\n        store => ({auth: store.auth}),\n         {getCurrentPoll}\n    )(RouteViews)\n);","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logout } from '../store/actions';\n\nconst Navbar = ({ auth, logout }) => (\n\n  <nav>\n    <div className=\"nav-wrapper teal darken-2 z-depth-5\">\n      <ul id=\"nav-mobile\" className=\" text-center\"><li>BLOCKCHAIN VOTING</li></ul>\n        <ul id=\"nav-mobile\" className=\"right\">\n          <li>{auth.isAuthenticated && (\n            <Fragment>\n                <button className=\"btn teal darken-2 z-depth-5\" onClick={logout}>Logout</button>\n                {auth.isAuthenticated && (\n                    <p className=\"navbar-user\">Logged in as {auth.user.username}</p>\n                )}\n            </Fragment>\n          )}</li>\n            {!auth.isAuthenticated && (\n                <Fragment>\n                  <li><Link className=\"btn teal darken-2 z-depth-5\" to=\"/register\">Register</Link></li>\n                  <li><Link className=\"btn teal darken-2 z-depth-5\" to=\"/login\">Login</Link></li>\n                </Fragment>\n              )}\n        </ul>\n    </div>\n    \n \n        <Fragment>\n          <div className=\"sidebar teal darken-2 z-depth-5\">\n            <ul id=\"nav-mobile\" className=\"left active\">\n              <div className=\"row\"><li><Link  className=\"btn\" to=\"/\"><i className=\"material-icons\">home</i>Home</Link></li></div>\n            </ul>\n          </div>\n        </Fragment>\n\n  </nav>\n\n);\n\nexport default connect(\n  store => ({\n    auth: store.auth,\n  }),\n  {logout},\n)(Navbar);","import React, { Fragment } from 'react';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter} from 'react-router-dom';\nimport decode from 'jwt-decode';\n\n\n// my own middlewarez\n// import api from '../services/api';\nimport { store } from '../store/';\nimport {setCurrentUser, addError, setToken} from '../store/actions';\nimport RouteViews from './RouteViews';\nimport NavBar from './NavBar';\n\n\n\n\nif(localStorage.jwtToken) {\n    setToken(localStorage.jwtToken);\n    try {\n        store.dispatch(setCurrentUser(decode(localStorage.jwtToken)));\n    } catch (err) {\n        store.dispatch(setCurrentUser({}));\n        store.dispatch(addError(err));\n    }\n}\n\n    \n\n\n\n\n\n\nconst App = () => (\n    \n    <Provider store={store}>\n        <BrowserRouter>\n            <Fragment>\n                <NavBar/>\n                <RouteViews/>\n            </Fragment>\n     </BrowserRouter>\n    </Provider>\n);\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Lets check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://goo.gl/SC7cgQ'\n            );\n          });\n        } else {\n          // Is not local host. Just register service worker\n          registerValidSW(swUrl);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n          response.status === 404 ||\n          response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import React from 'react';\nimport { render } from 'react-dom';\n\n\nimport './index.css';\nimport App from './containers/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nclass Wrapper extends React.Component {\n    componentDidCatch(error, info) {\n      // Do something useful with error like logging to error reporting system\n      // then force reload (if that's what you want):\n      window.location.reload(true);\n    }\n    render() {\n      return (render(<App />, document.getElementById('root')))\n    }\n  }\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nregisterServiceWorker();\n"],"sourceRoot":""}