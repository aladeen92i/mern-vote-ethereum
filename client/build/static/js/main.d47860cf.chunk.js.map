{"version":3,"sources":["registerServiceWorker.js","store/reducers/auth.js","store/reducers/index.js","store/reducers/error.js","store/actionTypes.js","store/reducers/polls.js","store/index.js","store/actions/error.js","services/api.js","store/actions/auth.js","store/actions/polls.js","components/Auth.jsx","components/ErrorMessage.jsx","pages/AuthPage.jsx","components/Poll.jsx","services/color.js","components/Polls.jsx","components/CreatePoll.jsx","pages/TestPage.jsx","pages/Homepage.jsx","pages/PollPage.jsx","pages/CreatePollPage.jsx","containers/RouteViews.jsx","containers/NavBar.jsx","containers/Footer.jsx","containers/App.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","DEFAULT_STATE","isAuthenticated","user","combineReducers","arguments","length","undefined","message","action","type","Object","objectSpread","auth","keys","polls","currentPoll","poll","store","createStore","rootReducer","compose","applyMiddleware","thunk","addError","api","setToken","token","axios","defaults","headers","common","concat","call","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","method","path","data","response","wrap","_context","prev","next","sent","abrupt","stop","_x","_x2","_x3","apply","this","setCurrentUser","logout","dispatch","localStorage","clear","setPolls","setCurrentPoll","Auth","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","username","password","ethAddress","handleChange","bind","assertThisInitialized","handleSubmit","e","setState","defineProperty","target","name","value","_this$state","email","authType","preventDefault","authUser","ethInput","ethLabel","cardActions","_this$state2","react_default","createElement","Input","onChange","autoComplete","className","Label","htmlFor","Link","to","react","Jumbotron","fluid","Container","style","backgroundColor","border","borderRadius","color","Form","onSubmit","Row","Col","sm","size","offset","md","xl","xs","lg","FormGroup","id","Component","connect","_ref2","objectWithoutProperties","setItem","t0","AuthPage","Redirect","components_ErrorMessage","components_Auth","withRouter","vote","_ref5","_callee5","_context5","_x5","deletePoll","_ref6","_callee6","_context6","_x6","answers","options","map","option","Button","onClick","_id","answer","key","pollData","labels","datasets","label","question","Math","random","toString","slice","borderColor","votes","defaultFontColor","react_chartjs_2_es","items","src","altText","caption","header","Polls","sorted","page","pageSize","expanded","resized","filtered","handleSelect","history","push","_this2","_this$props","getPolls","getUserPolls","Table","UncontrolledCarousel","_callee2","_context2","StepOne","currentStep","i","handleAnswer","tag","row","Progress","animated","addAnswer","for","placeholder","StepTwo","voters","voter","handleVoter","FormText","addVoter","CreatePoll","_next","_prev","toConsumableArray","index","alert","createPoll","previousButton","nextButton","_ref3","_callee3","_context3","jwtToken","decode","err","es","components_CreatePoll","components_Polls","components_Poll","Homepage","PollPage","getPoll","params","CreatePollPage","getCurrentPoll","_ref4","_callee4","_context4","_x4","Switch","Route","exact","render","pages_Homepage","pages_AuthPage","pages_CreatePollPage","pages_PollPage","assign","TestPage","NavBar","toggle","isOpen","Navbar","light","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","NavItem","NavLink","React","Footer","href","App","BrowserRouter","containers_NavBar","containers_RouteViews","containers_Footer","containers_App","document","getElementById","URL","process","origin","addEventListener","fetch","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d47860cf.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Lets check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://goo.gl/SC7cgQ'\n            );\n          });\n        } else {\n          // Is not local host. Just register service worker\n          registerValidSW(swUrl);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n          response.status === 404 ||\n          response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import {SET_CURRENT_USER} from '../actionTypes';\n\nconst DEFAULT_STATE = {\n    isAuthenticated: false,\n    user: {}\n}\n\nexport default (state = DEFAULT_STATE, action) => {\n    switch(action.type){\n        case SET_CURRENT_USER:\n            return {\n                isAuthenticated: !!Object.keys(action.user).length,\n                user: action.user\n            };\n\n        default:\n            return state;\n    }\n\n}","import {combineReducers} from 'redux';\nimport auth from './auth';\nimport error from './error';\nimport {polls, currentPoll} from './polls';\n\n\nexport default combineReducers({\n    error,\n    auth,\n    polls,\n    currentPoll\n});","import {ADD_ERROR, REMOVE_ERROR} from '../actionTypes';\n\nexport default (state = {message: null}, action) => {\n\n    switch(action.type) {\n        \n        case ADD_ERROR:\n            console.log(action.error);\n            return {...state, message: action.error};\n\n        case REMOVE_ERROR:\n            return {...state, message: null};\n\n        default:\n            return state;\n    }\n}","export const ADD_ERROR = 'ADD_ERROR';\nexport const REMOVE_ERROR = 'REMOVE_ERROR';\n\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\n\nexport const SET_POLLS = 'SET_POLLS';\nexport const SET_CURRENT_POLL = 'SET_CURRENT_POLL';\n","import {SET_POLLS, SET_CURRENT_POLL} from '../actionTypes';\n\nexport const polls = (state = [], action) => {\n    switch(action.type) {\n        case SET_POLLS:\n            return action.polls;\n        \n        default:\n            return state;\n    }\n}\n\nexport const currentPoll = (state = {}, action) => {\n    switch(action.type){\n\n        case SET_CURRENT_POLL:\n            return action.poll;\n        \n        default:\n            return state;\n    }\n}","import {createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst DEFAULT_STATE = {\n    error: {message: null}\n};\n\nexport const store = createStore(\n    rootReducer,\n    DEFAULT_STATE,\n    compose(applyMiddleware(thunk))\n  );\n","import {ADD_ERROR, REMOVE_ERROR} from '../actionTypes';\n\nexport const addError = error => ({\n    type: ADD_ERROR,\n    error\n});\n\nexport const removeError = () => ({\n    type: REMOVE_ERROR\n});","import axios from 'axios';\n\nconst host = 'http://localhost:4000/api'\n\nexport const setToken = token => {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  } else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\n\nexport const call = async (method, path, data) => {\n  const response = await axios[method](`${host}/${path}`, data);\n  return response.data;\n};\n\nexport default { setToken, call };\n","import {addError, removeError} from './error';\nimport {SET_CURRENT_USER} from '../actionTypes';\nimport api from '../../services/api';\n\nexport const setCurrentUser = user => ({\n    type: SET_CURRENT_USER,\n    user\n});\n\nexport const setToken = token => {\n    api.setToken(token);\n};\n\nexport const logout = () => {\n    return dispatch => {\n        localStorage.clear();\n        setToken(null);\n        dispatch(setCurrentUser({}));\n        dispatch(removeError());\n    }\n}\n\nexport const authUser = (path, data) => {\n    return async dispatch => {\n        try {\n            const {token, ...user} = await api.call('post', `auth/${path}`, data);\n            console.log(\"Voici le token retourné par l'API au niveau du client : \", token);\n            localStorage.setItem('jwtToken', token);\n            api.setToken(token);\n            dispatch(setCurrentUser(user));\n            dispatch(removeError());\n        }catch(err) {\n            //console.log(err)\n            const error = err.response.data;\n            dispatch(addError(error.message)); \n        }\n    }\n}","import {SET_POLLS, SET_CURRENT_POLL} from '../actionTypes';\nimport {addError, removeError} from './error';\nimport api from '../../services/api';\n//import { BrowserHistory } from 'react-router';\n\nexport const setPolls = polls => ({\n    type: SET_POLLS,\n    polls\n});\n\nexport const setCurrentPoll = poll => ({\n    type: SET_CURRENT_POLL,\n    poll\n});\n\nexport const getPolls = () => {\n    return async dispatch => {\n        try {\n            const polls = await api.call('get', 'polls');\n            dispatch(setPolls(polls));\n            dispatch(removeError());\n        } catch (err) {\n            const error = err.response.data;\n            dispatch(addError(error.message));\n        }\n    }\n}\n\n// more like get last polls but whatever >.<\n// export const getSlicedPolls = () => {\n//     return async dispatch => {\n//         try {\n//             const polls = await api.call('get', 'polls');\n//             console.log(\"ceci est la taille de polls : \" + polls.length);\n//             const slicedPolls = polls.slice((polls.length - 5),polls.length);\n//             dispatch(setPolls(slicedPolls));\n//             dispatch(removeError());\n//         } catch (err) {\n//             if(err != undefined){\n//                 console.log(\"Voici l'erreur : \", err);\n//                 //const error = err.response.data;\n//                 dispatch(addError(err));\n//             }\n//         }\n//     }\n// }\n\n// export const sortPolls = () => { // TODO or to remove\n//     return async dispatch => {\n//         try {\n//             const polls = await api.call('get', 'polls');\n//         }catch(err){\n//             const error = err.response.data;\n//             dispatch(addError(error.message));\n//         }\n//     }\n// }\n\nexport const getUserPolls = () => {\n    return async dispatch => {\n        try {\n            const polls = await api.call('get', 'polls/user');\n            dispatch(setPolls(polls));\n            dispatch(removeError());\n        } catch (err) {\n            const error = err.response.data;\n            dispatch(addError(error.message));\n        }\n    }\n}\n\nexport const createPoll = data => {\n    return async dispatch => {\n        try {\n            const poll = await api.call('post', 'polls', data);\n            dispatch(setCurrentPoll(poll));\n            dispatch(removeError());\n        } catch (err) {\n            const error = err.response.data;\n            dispatch(addError(error.message));\n        }\n    }\n}\n\nexport const getCurrentPoll = path => {\n    return async dispatch => {\n      try {\n        const poll = await api.call('get', `polls/${path}`);\n        dispatch(setCurrentPoll(poll));\n        dispatch(removeError());\n      } catch (err) {\n        const  error  = err.response.data;\n        dispatch(addError(error));\n      }\n    }\n  };\n\nexport const vote = (path, data) => {\n    return async dispatch => {\n        try {\n            const poll = await api.call('post', `polls/${path}`, data);\n            dispatch(setCurrentPoll(poll));\n            dispatch(removeError());\n        } catch (err) {\n            const error = err.response.data;\n            dispatch(addError(error.message));\n        }\n    }\n}\n\nexport const deletePoll = (id) => {\n    return async dispatch => {\n        try {\n            const poll = await api.call('delete', `polls/${id}`);\n            dispatch(setCurrentPoll(poll));\n            dispatch(removeError());\n            \n        } catch (err) {\n            const error = err.response.data;\n            dispatch(addError(error.message));\n        }\n    }\n}","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { authUser, logout } from '../store/actions';\nimport { Card, Button, CardTitle, CardText, Container, Input, Label, Jumbotron, Row, Col, Form, FormGroup, FormText  } from 'reactstrap';\n\n\nclass Auth extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      ethAddress: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  handleSubmit(e) {\n    const { username, password, ethAddress, email } = this.state;\n    const { authType } = this.props;\n    e.preventDefault();\n    this.props.authUser(authType || 'login', { username, password, ethAddress, email });\n  }\n\n  componentDidMount(){\n\n  }\n\n\n  render() {\n    const { username, password, ethAddress } = this.state;\n    const { authType } = this.props;\n    let ethInput;\n    let ethLabel;\n    let cardActions;\n\n    if (authType === 'register') {\n      ethInput = <Input\n                    type=\"text\"\n                    value={ethAddress}\n                    name=\"ethAddress\"\n                    onChange={this.handleChange}\n                    autoComplete=\"off\"\n                    className=\"form-control validate\"\n                  />;\n      ethLabel= <Label htmlFor=\"ethAddress\">\n                    ETHADDRESS\n                </Label>;\n      cardActions = <Link className=\"text-dark\" to=\"/login\">login ?</Link>;\n    } else {\n      ethInput = null ;\n      cardActions = <Link className=\"text-dark\" to=\"/register\">register ?</Link>;\n    }\n    return (\n      <Fragment>\n        <div className=\"section\"></div>\n        <Jumbotron className=\"bg-secondary\" fluid>\n          <Container className=\"rounded shadow p-3 mb-5\" style={{backgroundColor: '#008080', border: '5px solid grey', borderRadius: '1px'}} color=\"faded\">\n              <Form onSubmit={this.handleSubmit}>\n              <Row>\n                <Col sm={{ size: '6', offset: 1 }} md={{ size: '6', offset: 1 }} xl={{ size: '6', offset: 1 }} xs={{ size: '6', offset: 1 }} lg={{ size: '6', offset: 1 }}>\n                      <FormGroup>\n                        <h1>{authType}</h1>\n                        <Input id=\"username\" type=\"text\" value={username} name=\"username\" onChange={this.handleChange} autoComplete=\"off\" className=\"validate form-control\"/>\n                        <Label htmlFor=\"username\">USERNAME</Label>\n                      </FormGroup>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col sm={{ size: '6', offset: 1 }} md={{ size: '6', offset: 1 }} xl={{ size: '6', offset: 1 }} xs={{ size: '6', offset: 1 }} lg={{ size: '6', offset: 1 }}>\n                      <FormGroup>\n                        <Input id=\"password\" type=\"password\" value={password} name=\"password\" onChange={this.handleChange} className=\"form-control validate\"/>\n                        <Label htmlFor=\"password\">PASSWORD</Label>\n                      </FormGroup>\n                  </Col>\n                </Row>\n                <Col sm={{ size: '6', offset: 1 }} md={{ size: '6', offset: 1 }} xl={{ size: '6', offset: 1 }} xs={{ size: '6', offset: 1 }} lg={{ size: '6'}}>\n                  <FormGroup>{ethInput}{ethLabel}</FormGroup>\n                </Col>\n                <Col sm={{ size: '6', offset: 1 }}>\n                <FormGroup>\n                      <button className=\"btn btn-primary\" type=\"submit\">\n                        Submit\n                      </button>\n                  </FormGroup>\n                      <div className=\"section\"></div>\n                  <FormGroup>\n                      <div className=\"card-actions\">\n                        <Link className=\"text-dark\" to=\"/\">Forgot password ?</Link> { cardActions }\n                      </div>\n                  </FormGroup>\n                  \n              </Col>\n              </Form>\n          </Container>\n        </Jumbotron>\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(() => ({}), { authUser, logout })(Auth);","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nconst ErrorMessage = ({ error }) => (\n    <Fragment> { error.message && <div className=\"error\" >{error.message}</div>} </Fragment>\n);\n\nexport default connect(store => ({ error: store.error }))(ErrorMessage);","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Auth from '../components/Auth';\nimport ErrorMessage from '../components/ErrorMessage';\n\nconst AuthPage = ({ authType, isAuthenticated }) => {\n\n    if(isAuthenticated) return <Redirect to=\"/\" />;\n\n\n\n    return (\n        <div>\n            <ErrorMessage />\n            <Auth authType={authType} />\n        </div>\n    )\n}\n\nexport default AuthPage;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Pie } from 'react-chartjs-2';\nimport { vote, deletePoll } from '../store/actions';\nimport { color } from '../services/color';\nimport { withRouter } from 'react-router-dom';\nimport { Button, Jumbotron, Container, Row, Col } from 'reactstrap';\n\n\nconst Poll = ({ poll, vote, deletePoll }) => {\n\n  const answers =\n    poll.options &&\n    poll.options.map(option => (\n      <Button\n        onClick={() => vote(poll._id, { answer: option.option })}\n        key={option._id}>\n        {option.option}\n      </Button>\n    ));\n\n  const pollData = poll.options && {\n    labels: poll.options.map(option => option.option),\n    datasets: [\n      {\n        label: poll.question,\n        backgroundColor: poll.options.map(option => color()),\n        borderColor: '#323643',\n        data: poll.options.map(option => option.votes),\n        defaultFontColor: \"#FFFFFF\",\n      },\n    ],\n  };\n\n  return (\n    <Jumbotron>\n      <Container>\n        <Row>\n          <Col sm=\"6\" lg=\"6\">\n          <div className=\"card blue-grey darken-1\">\n            <div className=\"card-content white-text\">\n              <span className=\"card-title\">{poll.question}</span>\n              <p>Infos from the smart contract</p>\n            </div>\n          <div className=\"card-action\">\n            <ul>\n              <li>{answers}</li>\n              <li><button className=\"button\" onClick={() => deletePoll(poll._id)}>Delete poll</button></li>\n            </ul>\n          </div>\n          </div>\n        </Col>\n          <div className=\"container\">\n            <div className=\"col s6 m6\">\n              <div className=\"card blue-grey lighten-2\">\n                <div className=\"card-content\">\n                <span className=\"card-title\">Votes</span>\n                <p>Nice graphic of the votes</p>\n                  { poll.options && <Pie data={pollData} /> }\n                </div>\n              </div>\n            </div>\n          </div>\n        </Row>\n      </Container>\n    </Jumbotron>\n  );\n};\n\nexport default withRouter(connect(\n  store => ({\n    poll: store.currentPoll,\n  }),\n  { vote, deletePoll },\n)(Poll));","export const color = () => {\n    return (\n      '#' +\n      Math.random()\n        .toString(16)\n        .slice(2, 8)\n    );\n  };","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getPolls, getUserPolls} from '../store/actions';\nimport { Table, Button, UncontrolledCarousel, Container, Row, Col } from 'reactstrap';\n\n// Import React Table\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\n\nconst items = [\n  {\n    src: 'images/papillon.jpeg',\n    altText: 'Slide 1',\n    caption: 'Slide 1',\n    header: 'Slide 1 Header'\n  },\n  {\n    src: 'images/papillon.jpeg',\n    altText: 'Slide 2',\n    caption: 'Slide 2',\n    header: 'Slide 2 Header'\n  },\n  {\n    src: 'images/papillon.jpeg',\n    altText: 'Slide 3',\n    caption: 'Slide 3',\n    header: 'Slide 3 Header'\n  }\n];\n\n\nclass Polls extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    sorted: [],\n    page: 0,\n    pageSize: 10,\n    expanded: {},\n    resized: [],\n    filtered: []};\n    this.handleSelect = this.handleSelect.bind(this);\n  }\n\n  componentDidMount() {\n  }\n\n  handleSelect(id) {\n    const { history } = this.props;\n    history.push(`/polls/${id}`);\n  }\n\n  render() {  \n    const { getPolls, getUserPolls, auth} = this.props;\n\n    const polls = this.props.polls.map((poll, i=0) => (\n\n      <Fragment key={poll._id}>\n        <tr className=\"\">\n          <td>{poll.question}</td>\n          <td> voters list inc soon </td>\n          <td> Poll status inc soon </td>\n          <td> Voted inc soon </td>\n          <td> Participation inc soon </td>\n          <td><button className=\"btn-small buttons_center z-depth-1\" onClick={() => this.handleSelect(poll._id)} ><i className=\"material-icons\">send</i></button></td>\n        </tr>\n      </Fragment>\n    ));\n    return (\n      <div>\n              {auth.isAuthenticated && (\n                <Fragment>\n                <div className=\"section\"></div>\n                <Row>\n                  <Col>\n                    <div className=\"buttons_center\">\n                      <Button color=\"secondary\"><Link to=\"/poll/new\">New Poll</Link></Button>\n                    </div>\n                    <br />\n                  </Col>\n                </Row>\n                <div className=\"section\"></div>\n                <div className=\"container z-depth-4\">\n                            <Table className=\"responsive-table centered z-depth-1\">\n                              <thead>\n                                <tr>\n                                  <th> Name </th>\n                                  <th> Voters List </th>\n                                  <th> Poll Status </th>\n                                  <th> voted ? </th>\n                                  <th> Participation </th>\n                                </tr>\n                              </thead>\n                              <tbody>{polls}</tbody>\n                              \n                            </Table>\n                </div>\n                </Fragment>\n              )}\n              \n              {!auth.isAuthenticated && (\n                <Fragment>\n                <Container>\n                <UncontrolledCarousel items={items} />\n                </Container>\n                </Fragment>\n              )}\n      </div>\n    );\n  }\n}\n\nexport default connect(store => ({\n    auth: store.auth,\n    polls: store.polls,\n  }),\n  { getPolls, getUserPolls},\n)(Polls);\n","import React, { Component, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Progress, Button, Container, Input, Label, Jumbotron, Row, Col, Form, FormGroup, FormText } from 'reactstrap';\nimport { createPoll } from '../store/actions';\n\n\nfunction StepOne(props){\n    if (props.currentStep !== 1) {\n      return null\n    }\n    const options = props.options.map((option, i) => (\n        <FormGroup key={i}>\n        <Col sm={10} lg={10}>\n        <legend className=\"col-form-label\">Option N {i}</legend>\n          <Input\n            type=\"text\"\n            value={option.option}\n            onChange={e => props.handleAnswer(e, i)}\n          />\n        </Col>\n        </FormGroup>\n    ));\n    return (\n    <Fragment>\n      <FormGroup tag=\"fieldset\" row>\n        <Col sm={10} lg={10}>\n        <Progress animated color=\"info\" value={25}>Poll Creation 25%</Progress>\n        <legend className=\"col-form-label\">Poll Question</legend>\n            <Input\n              type=\"text\"\n              name=\"question\"\n              value={props.question}\n              onChange={props.handleChange}\n            />\n        </Col>\n            <br />\n            {options}\n            <br />\n            <Button className=\"offset-1\" type=\"button\" onClick={props.addAnswer}>\n              Add options\n            </Button>\n      </FormGroup>\n      <FormGroup row>\n      <Col sm={10} lg={10}>\n        <Label for=\"openingDate\">Opening</Label>\n        <Input\n          type=\"date\"\n          name=\"openingDate\"\n          id=\"openingDate\"\n          placeholder=\"Opening Date\"\n        />\n      </Col>\n      </FormGroup>\n      <FormGroup row>\n      <Col sm={10} lg={10}>\n        <Input\n          type=\"time\"\n          name=\"openingTime\"\n          id=\"openingTime\"\n          placeholder=\"Time placeholder\"\n        />\n      </Col>\n      </FormGroup>\n      <FormGroup row>\n      <Col sm={10} lg={10}>\n        <Label for=\"openingDate\">Closing</Label>\n        <Input\n          type=\"date\"\n          name=\"closingDate\"\n          id=\"closingDate\"\n          placeholder=\"closing Date\"\n        />\n        </Col>\n      </FormGroup>\n      <FormGroup row>\n      <Col sm={10} lg={10}>\n        <Input\n          type=\"time\"\n          name=\"closingTime\"\n          id=\"closingTime\"\n          placeholder=\"Closing Time\"\n        />\n      </Col>\n      </FormGroup>\n    </Fragment>\n    )\n}\n\nfunction StepTwo(props){\n  if (props.currentStep !== 2) {\n    return null\n  }\n\n  const voters = props.voters.map((voter, i) => (\n    <Fragment key={i}>\n      <Label>voter {i}</Label>\n      <Input\n        type=\"text\"\n        value={voter}\n        onChange={e => props.handleVoter(e, i)}\n      />\n    </Fragment>\n  ));\n\n  return (\n    <div>\n    <FormText>\n      <Progress animated color=\"info\" value={75}>Poll Creation 75%%</Progress>\n    </FormText>\n    <FormGroup>\n      {voters}\n    </FormGroup>\n    <Button className=\"btn btn-primary\" type=\"button\" onClick={props.addVoter}>\n                Add Voter\n    </Button>\n    <br/><br></br>\n    </div>\n    \n  )\n}\n\nclass CreatePoll extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentStep: 1,\n      question: '',\n      options: ['', ''],\n      voters: ['',''],\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.addAnswer = this.addAnswer.bind(this);\n    this.handleAnswer = this.handleAnswer.bind(this);\n    this.handleVoter = this.handleVoter.bind(this);\n    this.addVoter = this.addVoter.bind(this);\n    this._prev = this._prev.bind(this);\n    this._next = this._next.bind(this);\n  }\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  addVoter() {\n    this.setState({ voters: [...this.state.voters, ''] });\n  }\n  addAnswer() {\n    this.setState({ options: [...this.state.options, ''] });\n  }\n  handleAnswer(e, index) {\n    const options = [...this.state.options];\n    options[index] = e.target.value;\n    this.setState({ options });\n  }\n  handleVoter(e, index) {\n    const voters = [...this.state.voters];\n    voters[index] = e.target.value;\n    this.setState({ voters });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { question, options, voters } = this.state\n    alert(`Your registration detail: \\n \n    Question: ${question} \\n \n    options: ${options} \\n\n    Voters: ${voters}`);\n    this.props.createPoll(this.state);\n    this.props.history.push('/');\n  }\n  _next = () => {\n    let currentStep = this.state.currentStep\n    currentStep = currentStep >= 2? 3: currentStep + 1\n    this.setState({\n      currentStep: currentStep\n    })\n  }\n    \n  _prev = () => {\n    let currentStep = this.state.currentStep\n    currentStep = currentStep <= 1? 1: currentStep - 1\n    this.setState({\n      currentStep: currentStep\n    })\n  }\n\n  /*\n  * the functions for our button\n  */\n  previousButton() {\n    let currentStep = this.state.currentStep;\n    if(currentStep !==1){\n      return (\n        <button \n          className=\"btn btn-primary float-left\" \n          type=\"button\" onClick={this._prev}>\n        Previous\n        </button>\n      )\n    }\n    return null;\n  }\n\n  nextButton(){\n    let currentStep = this.state.currentStep;\n    if(currentStep <2){\n      return (\n        <button \n          className=\"btn btn-primary float-right\" \n          type=\"button\" onClick={this._next}>\n        Next\n        </button>        \n      )\n    }\n    return null;\n  }\n  render() {\n\n\n    return (\n    <Fragment>\n      <Jumbotron>\n        <Container>\n          <Form onSubmit={this.handleSubmit}>\n          <StepOne\n          currentStep={this.state.currentStep} \n          handleChange={this.handleChange}\n          handleAnswer={this.handleAnswer}\n          addAnswer={this.addAnswer}\n          question={this.state.question}\n          options={this.state.options}\n        />\n        <StepTwo\n          currentStep={this.state.currentStep} \n          handleChange={this.handleChange}\n          handleVoter={this.handleVoter}\n          voters={this.state.voters}\n          addVoter={this.addVoter}\n          handleSubmit={this.handleSubmit}\n\n        />\n        <br />\n        <FormGroup>\n          {this.previousButton()}\n          {this.nextButton()}\n        </FormGroup>\n        <br></br>\n        <br></br>\n        {this.state.currentStep == 2 && (\n            <div>\n              <button className=\"btn btn-success btn-block\" onClick={this.handleSubmit}>Submit</button>\n            </div>\n        )}\n        </Form>\n        </Container>\n      </Jumbotron>\n      <Jumbotron>\n      </Jumbotron>\n    </Fragment>\n    );\n  }\n}\n\nexport default withRouter(connect(() => ({}), { createPoll })(CreatePoll));","import React, { Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport decode from 'jwt-decode';\nimport { Provider } from 'react-redux';\nimport { store } from '../store';\nimport { setToken, setCurrentUser, addError } from '../store/actions';\n\nimport Auth from '../components/Auth';\nimport Poll from '../components/Poll';\nimport Polls from '../components/Polls';\nimport ErrorMessage from '../components/ErrorMessage';\nimport CreatePoll from '../components/CreatePoll';\n//import Contract from '../components/Contract';\n\nif (localStorage.jwtToken) {\n  setToken(localStorage.jwtToken);\n  try {\n    store.dispatch(setCurrentUser(decode(localStorage.jwtToken)));\n  } catch (err) {\n    store.dispatch(setCurrentUser({}));\n    store.dispatch(addError(err));\n  }\n}\n\n// const options = {\n//   contracts: [MyStringStore],\n//   web3: {\n//     fallback: {\n//       type: \"ws\",\n//       url: \"ws://127.0.0.1:8545\",\n//     },\n//   },\n// };\n\n// const drizzle = new Drizzle(options);\n\nconst UITest = props => (\n\n  <Provider store={store}>\n    <Fragment>\n      <h1>UI Test Page</h1>\n\n      <h2>Testing Error Component: </h2>\n      <ErrorMessage />\n      <hr />\n\n      <h2>Testing Auth Component: </h2>\n      <Auth />\n      <hr />\n\n      <h2>Testing Create Poll Component: </h2>\n      <CreatePoll />\n      <hr />\n\n      <h2>Testing Polls Component: </h2>\n      <Polls {...props} />\n      <hr />\n\n      <h2>Testing Poll Component: </h2>\n      <Poll />\n      <hr />\n      <h2>Testing Drizzle contract Component: </h2>\n      <hr />\n    </Fragment>\n  </Provider>\n);\n\nexport default withRouter(UITest);","import React from 'react';\nimport Polls from '../components/Polls';\nimport ErrorMessage from '../components/ErrorMessage';\n\n\nconst Homepage = props => <div>\n    <Polls {...props} />\n    {<ErrorMessage />}\n</div>\n\nexport default Homepage;","import React from 'react';\nimport Poll from '../components/Poll';\nimport ErrorMessage from '../components/ErrorMessage';\n\nconst PollPage = ({ match, getPoll }) => {\n    //const host = window.location.href;\n    getPoll(match.params.id);\n\n    return (\n        <div>\n            <ErrorMessage />\n            <Poll />\n        </div>\n    )\n}\n\nexport default PollPage;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport CreatePoll from '../components/CreatePoll';\nimport ErrorMessage from '../components/ErrorMessage';\n\nconst CreatePollPage = ({ isAuthenticated }) => {\n  if (!isAuthenticated) return <Redirect to=\"/login\" />;\n\n  return (\n    <div>\n      <ErrorMessage />\n      <CreatePoll />\n    </div>\n  );\n};\n\nexport default CreatePollPage;","import React from 'react';\nimport {Switch, Route, withRouter} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport AuthPage from '../pages/AuthPage';\nimport TestPage from '../pages/TestPage';\nimport Homepage from '../pages/Homepage';\nimport {getCurrentPoll} from '../store/actions';\nimport PollPage from '../pages/PollPage';\nimport CreatePollPage from '../pages/CreatePollPage';\n\n\nconst RouteViews = ({ auth, getCurrentPoll }) => \n\n<main>\n    <Switch>\n        <Route exact path=\"/\" render = { props => <Homepage {...props}/> } />\n        <Route exact path=\"/login\" render = { () => <AuthPage authType=\"login\" isAuthenticated={auth.isAuthenticated}/> } />\n        <Route exact path=\"/poll/new\" render={ () => <CreatePollPage isAuthenticated={auth.isAuthenticated} /> }/>\n        <Route exact path=\"/register\" render = { () => <AuthPage authType=\"register\" isAuthenticated={auth.isAuthenticated}/> } />\n        <Route exact path='/polls/:id' render={ props => <PollPage getPoll={id => getCurrentPoll(id)} {...props} /> } />\n        <Route exact path=\"/test\" render = { () => <TestPage/>}/>\n    </Switch>\n</main>;\n\nexport default withRouter(\n    connect(\n        store => ({auth: store.auth}),\n         {getCurrentPoll}\n    )(RouteViews)\n);","import React, { Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logout } from '../store/actions';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Button } from 'reactstrap';\n\n\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  render() {\n    const { auth, logout } = this.props;\n    return (\n      <div>\n        {auth.isAuthenticated && (\n        <Navbar  style={{backgroundColor: '#008080', border: '3px solid grey', borderRadius: '2px'}} color=\"faded\" light expand=\"sm\">\n        <NavbarBrand><Button onClick={() => {this.props.history.push('/')}}>Home</Button></NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <UncontrolledDropdown nav inNavbar className=\"float-right\">\n                <DropdownToggle nav caret>\n                  Options\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem>\n                    Option 1\n                  </DropdownItem>\n                  <DropdownItem>\n                    Option 2\n                  </DropdownItem>\n                  <DropdownItem divider />\n                  <DropdownItem>\n                    Reset\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              {auth.isAuthenticated && (\n                <Fragment>\n                    <NavItem className=\"float-right\"><Button onClick={logout}>Logout</Button></NavItem>\n                </Fragment>\n              )}\n              {!auth.isAuthenticated && (\n              <Fragment>\n                <NavItem >\n                  <NavLink><Button className=\"float-right\" onClick={() => {this.props.history.push('/register')}}>Register</Button></NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink><Button className=\"float-right\" onClick={() => {this.props.history.push('/login')}}>Login</Button></NavLink>\n                </NavItem>\n              </Fragment>\n              )}\n            </Nav>\n          </Collapse>\n        </Navbar>\n        )}\n      </div>\n  \n    );\n  }\n}\n\nexport default withRouter(connect(\n  store => ({\n    auth: store.auth,\n  }),\n  {logout},\n)(NavBar));\n\n{/* <Navbar color=\"dark\">\n        <Nav className=\"ml-auto\" navbar>\n        <NavItem>\n          <NavLink to=\"/\" inNavbar><i className=\"material-icons\">BLOCKCHAIN VOTING</i></NavLink>\n        </NavItem>\n            {auth.isAuthenticated && (\n              <Fragment>\n                  <NavItem inNavbar><Button className=\"\" onClick={logout}>Logout</Button></NavItem>\n              </Fragment>\n            )}\n              {!auth.isAuthenticated && (\n                    <NavItem inNavbar>\n                      <NavLink  to=\"/register\">Register</NavLink>\n                      <NavLink  to=\"/login\">Login</NavLink>\n                    </NavItem>\n                )}\n        </Nav>\n    </Navbar> */}","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logout } from '../store/actions';\nimport {Jumbotron, Container, Row, Col, NavLink, Navbar, Button } from 'reactstrap';\n\n\n\n\nclass Footer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  \n  render() {\n    const { auth } = this.props;\n    return (\n    <Fragment>\n      {auth.isAuthenticated && (\n            <Container className=\"footer\" style={{backgroundColor: '#008080', border: '5px solid grey', borderRadius: '1px'}} color=\"faded\" fluid>\n              <Row>\n                <Col sm=\"6\" lg=\"6\">\n                  <p className=\"display-5\">Voting Blockchain App by GFI - © 2019 Copyright</p>\n                </Col>\n                <Col sm=\"2\" lg=\"2\">\n                  <NavLink href=\"https://github.com/zeley93\"><Button color=\"secondary\">Github</Button></NavLink>\n                </Col>\n                <Col sm=\"2\" lg=\"2\">\n                  <NavLink href=\"https://www.gfi.world/fr-en/\"><Button color=\"secondary\">Gfi</Button></NavLink>\n                </Col>\n              </Row>\n            </Container>\n      )}\n      </Fragment> \n    );\n  }\n}\n\nexport default connect(\n  store => ({\n    auth: store.auth,\n  }),\n  {},\n)(Footer);","import React, { Fragment } from 'react';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter} from 'react-router-dom';\nimport decode from 'jwt-decode';\n\n\n// my own middlewarez\n// import api from '../services/api';\nimport { store } from '../store/';\nimport {setCurrentUser, addError, setToken} from '../store/actions';\nimport RouteViews from './RouteViews';\nimport NavBar from './NavBar';\nimport Footer from './Footer';\n\n\n\n\nif(localStorage.jwtToken) {\n    setToken(localStorage.jwtToken);\n    try {\n        store.dispatch(setCurrentUser(decode(localStorage.jwtToken)));\n    } catch (err) {\n        store.dispatch(setCurrentUser({}));\n        store.dispatch(addError(err));\n    }\n}\n\n    \n\n\n\n\n\n\nconst App = () => (\n    \n    <Provider store={store}>\n        <BrowserRouter>\n            <Fragment>\n                <NavBar/>\n                <RouteViews/>\n                <Footer />\n            </Fragment>\n     </BrowserRouter>\n    </Provider>\n);\n\nexport default App;","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport registerServiceWorker from './registerServiceWorker';\nimport App from './containers/App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nrender(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nregisterServiceWorker();\n"],"sourceRoot":""}